<?xml version="1.0" encoding="UTF-8"?>

<!--
Generated by Ansible for {{ ansible_fqdn }}
-->

<!--
    Ignite Spring configuration file.

    When starting a standalone Ignite node, you need to execute the following command:
    {IGNITE_HOME}/bin/ignite.{bat|sh} path-to-this-file/default-config.xml

    When starting Ignite from Java IDE, pass path to this file into Ignition:
    Ignition.start("path-to-this-file/default-config.xml");
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd">

    <!--
        Optional description.
    -->
    <description>
        Spring file for Ignite node configuration with IGFS and Apache Hadoop map-reduce support enabled.
        Ignite node will start with this configuration by default.
    </description>

    <!--
        Initialize property configurer so we can reference environment variables.
    -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_FALLBACK"/>
        <property name="searchSystemEnvironment" value="true"/>
    </bean>

    <!--
        Configuration of Ignite node.
    -->
    <bean id="grid.cfg" class="org.apache.ignite.configuration.IgniteConfiguration">
        <!--
            Configure caches where IGFS will store data.
        -->
        <property name="cacheConfiguration">
            <list>
                <!--
                    Configure metadata cache where file system structure will be stored. It must be TRANSACTIONAL,
                    and must have backups to maintain file system consistency in case of node crash.
                -->
                <bean class="org.apache.ignite.configuration.CacheConfiguration">
                    <property name="name" value="igfs-meta"/>
                    <property name="cacheMode" value="REPLICATED"/>
                    <property name="atomicityMode" value="TRANSACTIONAL"/>
                </bean>

                <!--
                    Configure data cache where file's data will be stored.
                -->
                <bean class="org.apache.ignite.configuration.CacheConfiguration">
                    <property name="name" value="igfs-data"/>
                    <property name="atomicityMode" value="TRANSACTIONAL"/>
                </bean>
            </list>
        </property>

        <!--
            This port will be used by Apache Hadoop client to connect to Ignite node as if it was a job tracker.
        -->
        <property name="connectorConfiguration">
            <bean class="org.apache.ignite.configuration.ConnectorConfiguration">
                <property name="port" value="11211"/>
            </bean>
        </property>

        <!--
            Configure one IGFS file system instance named "igfs" on this node.
        -->
        <property name="fileSystemConfiguration">
            <list>
                <bean class="org.apache.ignite.configuration.FileSystemConfiguration">
                    <!-- IGFS name you will use to access IGFS through Hadoop API. -->
                    <property name="name" value="{{ igfs_name }}"/>

                    <!-- Caches with these names must be configured. -->
                    <property name="metaCacheName" value="igfs-meta"/>
                    <property name="dataCacheName" value="igfs-data"/>

                    <!-- Configure TCP endpoint for communication with the file system instance. -->
                    <property name="ipcEndpointConfiguration">
                        <bean class="org.apache.ignite.igfs.IgfsIpcEndpointConfiguration">
                            <property name="type" value="TCP" />
                            <property name="host" value="{{ ignite_bind }}" />
                            <property name="port" value="{{ ignite_port }}" />
                        </bean>
                    </property>

                    <!--
                        Configure secondary file system if needed.
                    -->
                    <property name="secondaryFileSystem">
                        <bean class="org.apache.ignite.hadoop.fs.IgniteHadoopIgfsSecondaryFileSystem">
                            <property name="fileSystemFactory">
                                <bean class="org.apache.ignite.hadoop.fs.CachingHadoopFileSystemFactory">
                                    <property name="uri" value="{{ hdfs_url }}"/>
                                    <!--
                                    <property name="configPaths">
                                        <list>
                                            <value>{{ hadoop_conf_dir }}/core-site.xml</value>
                                        </list>
                                    </property>
                                    -->
                                </bean>
                            </property>
                        </bean>
                    </property>
                
                </bean>
            </list>
        </property>

        <!--
            TCP discovery SPI can be configured with list of addresses if multicast is not available.
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder">
                        <property name="addresses">
                            <list>
                                <value>127.0.0.1:47500..47509</value>
                            </list>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>
        -->
    </bean>
</beans>
